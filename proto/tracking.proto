syntax = "proto3";

option go_package = "proto";

// TrackingStatus keeps hold of information about the current "state" of tracking, i.e. whether or
// not a timer is running, and which timer we last modified.
message TrackingStatus {
    // Whether or not a (any) timer is running.
    bool is_running = 1;
    // The date of the timesheet currently being tracked.
    string timesheet = 2;
    // The hash of the entry currently being tracked.
    string entry = 3;
}

// TrackingTimesheet represents a timesheet. It contains all of the entries for a time period.
message TrackingTimesheet {
    // The key of this timesheet.
    string key = 1;
    // A timesheet consists of many entries. A timesheet can be totally empty, it's just there to
    // hold the reference to a bunch of entries under a date, i.e. for easy access.
    repeated string entries = 2;
}

// TrackingEntry represents an entry in the timesheet. This will have enough information to commit
// to the duration, and also enough information to identify the entry.
message TrackingEntry {
    // The key of this entry.
    string key = 1;
    // The key of the timesheet this entry belongs to.
    string timesheet = 2;
    // The note associated with this entry.
    string note = 3;
    // The unix timestamp of when this entry was created.
    uint64 created = 4;
    // The unix timestamp of when this entry was last updated.
    uint64 updated = 5;
    // The number of seconds this has been tracked for (once committed).
    uint64 duration = 6;
}

// TrackingEntryRef represents a reference from an entry's short key to it's full key.
message TrackingEntryRef {
    // The key of this entry reference.
    string key = 1;
    // The key of the entry this reference belongs to.
    string entry = 2;
}
