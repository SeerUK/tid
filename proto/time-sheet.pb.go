// Code generated by protoc-gen-go.
// source: time-sheet.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TimeSheet struct {
	Entries []*TimeSheetEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (m *TimeSheet) Reset()                    { *m = TimeSheet{} }
func (m *TimeSheet) String() string            { return proto1.CompactTextString(m) }
func (*TimeSheet) ProtoMessage()               {}
func (*TimeSheet) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *TimeSheet) GetEntries() []*TimeSheetEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type TimeSheetEntry struct {
	Duration  uint64 `protobuf:"varint,1,opt,name=duration" json:"duration,omitempty"`
	StartTime uint64 `protobuf:"varint,2,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	Note      string `protobuf:"bytes,3,opt,name=note" json:"note,omitempty"`
}

func (m *TimeSheetEntry) Reset()                    { *m = TimeSheetEntry{} }
func (m *TimeSheetEntry) String() string            { return proto1.CompactTextString(m) }
func (*TimeSheetEntry) ProtoMessage()               {}
func (*TimeSheetEntry) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *TimeSheetEntry) GetDuration() uint64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *TimeSheetEntry) GetStartTime() uint64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *TimeSheetEntry) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func init() {
	proto1.RegisterType((*TimeSheet)(nil), "TimeSheet")
	proto1.RegisterType((*TimeSheetEntry)(nil), "TimeSheetEntry")
}

func init() { proto1.RegisterFile("time-sheet.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 158 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x28, 0xc9, 0xcc, 0x4d,
	0xd5, 0x2d, 0xce, 0x48, 0x4d, 0x2d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x32, 0xe3, 0xe2,
	0x0c, 0xc9, 0xcc, 0x4d, 0x0d, 0x06, 0x09, 0x09, 0x69, 0x72, 0xb1, 0xa7, 0xe6, 0x95, 0x14, 0x65,
	0xa6, 0x16, 0x4b, 0x30, 0x2a, 0x30, 0x6b, 0x70, 0x1b, 0xf1, 0xeb, 0xc1, 0x25, 0x5d, 0xf3, 0x4a,
	0x8a, 0x2a, 0x83, 0x60, 0xf2, 0x4a, 0xf1, 0x5c, 0x7c, 0xa8, 0x52, 0x42, 0x52, 0x5c, 0x1c, 0x29,
	0xa5, 0x45, 0x89, 0x25, 0x99, 0xf9, 0x79, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x2c, 0x41, 0x70, 0xbe,
	0x90, 0x2c, 0x17, 0x57, 0x71, 0x49, 0x62, 0x51, 0x49, 0x3c, 0xc8, 0x7e, 0x09, 0x26, 0xb0, 0x2c,
	0x27, 0x58, 0x04, 0x64, 0x88, 0x90, 0x10, 0x17, 0x4b, 0x5e, 0x7e, 0x49, 0xaa, 0x04, 0xb3, 0x02,
	0xa3, 0x06, 0x67, 0x10, 0x98, 0xed, 0xc4, 0x1e, 0xc5, 0x0a, 0x76, 0x61, 0x12, 0x1b, 0x98, 0x32,
	0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xe5, 0x8e, 0xe6, 0x03, 0xbc, 0x00, 0x00, 0x00,
}
